name: Scheduled Data Refresh

on:
  schedule:
    - cron: '0 */12 * * *' # Runs every 12 hours
  workflow_dispatch:


env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}


jobs:
  etl:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Read version from file
      run: |
        source version.env
        echo "IMAGE_VERSION=$IMAGE_VERSION"

    - name: Create service account key file
      env:
        GOOGLE_SERVICE_ACCOUNT_JSON: '${{ secrets.PROD_GOOGLE_SERVICE_ACCOUNT_JSON }}'
      run: |
        mkdir credentials 
        printf '%s ' $GOOGLE_SERVICE_ACCOUNT_JSON >| credentials/service_account_key.json;

    - name: Log in to Docker Hub
      env:
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: |
        echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin 

    - name: Pull Docker image
      run: |
        echo "IMAGE_VERSION=$IMAGE_VERSION"
        docker pull ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:$IMAGE_VERSION

    - name: Run ETL job
      env:
        GCS_BUCKET: ${{ secrets.PROD_GCS_BUCKET }}
        FLIPSIDE_API_KEY: ${{ secrets.PROD_FLIPSIDE_API_KEY }}
      run: |
        docker run \
          -v $PWD/credentials:/osmosis-validator-voting-comparison/credentials \
          -e GCS_BUCKET=$GCS_BUCKET \
          -e FLIPSIDE_API_KEY=$FLIPSIDE_API_KEY \
          ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:$IMAGE_VERSION \
          python -m src.etl.refresh_datasets
